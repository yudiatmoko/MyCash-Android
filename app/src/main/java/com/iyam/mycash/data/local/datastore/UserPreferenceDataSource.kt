package com.iyam.mycash.data.local.datastoreimport androidx.datastore.preferences.core.stringPreferencesKeyimport com.iyam.mycash.utils.PreferenceDataStoreHelperimport kotlinx.coroutines.flow.Flowinterface UserPreferenceDataSource {    suspend fun setUserToken(token: String)    suspend fun getUserToken(): String    suspend fun removeUserToken()    fun getUserTokenFlow(): Flow<String>}class UserPreferenceDataSourceImpl(    private val helper: PreferenceDataStoreHelper) : UserPreferenceDataSource {    override suspend fun setUserToken(token: String) {        helper.putPreference(USER_TOKEN_PREF, token)    }    override suspend fun getUserToken(): String {        return helper.getFirstPreference(USER_TOKEN_PREF, "")    }    override suspend fun removeUserToken() {        helper.removePreference(USER_TOKEN_PREF)    }    override fun getUserTokenFlow(): Flow<String> {        return helper.getPreference(USER_TOKEN_PREF, "")    }    companion object {        val USER_TOKEN_PREF = stringPreferencesKey("USER_TOKEN_PREF")    }}